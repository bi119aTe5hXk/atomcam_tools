diff --git a/internal/homekit/api.go b/internal/homekit/api.go
index abd8e97..cb84057 100644
--- a/internal/homekit/api.go
+++ b/internal/homekit/api.go
@@ -137,3 +137,48 @@ func findHomeKitURLs() map[string]*url.URL {
 	}
 	return urls
 }
+
+type PairingInfo struct {
+	Name         string     `yaml:"name"`
+	DeviceID     string     `yaml:"device_id"`
+	Pin          string     `yaml:"pin"`
+	Status       string     `yaml:"status"`
+}
+
+func getPairingInfo(host string, s *server) PairingInfo {
+	status := "unpaired"
+	if len(s.pairings) > 0 {
+		status = "paired"
+	}
+	return PairingInfo {
+		Name: s.mdns.Name ,
+		DeviceID: s.hap.DeviceID,
+		Pin: s.hap.Pin,
+		Status: status,
+	}
+}
+
+func apiPairingHandler(w http.ResponseWriter, r *http.Request) {
+	switch r.Method {
+	case "GET":
+		pairingInfo := map[string]PairingInfo{}
+		for host, s := range servers {
+			pairingInfo[s.stream] = getPairingInfo(host, s)
+		}
+		api.ResponseJSON(w, pairingInfo)
+
+	case "DELETE":
+		query := r.URL.Query()
+		name := query.Get("name")
+		stream := query.Get("stream")
+		device_id := query.Get("device_id")
+		for _, s := range servers {
+			if name == s.mdns.Name || stream == s.stream || device_id == s.hap.DeviceID {
+				s.pairings = nil
+				s.UpdateStatus()
+				s.PatchConfig()
+				break;
+			}
+		}
+	}
+}
diff --git a/internal/homekit/homekit.go b/internal/homekit/homekit.go
index bfe3e97..ceadcae 100644
--- a/internal/homekit/homekit.go
+++ b/internal/homekit/homekit.go
@@ -36,6 +36,7 @@ func Init() {
 	streams.HandleFunc("homekit", streamHandler)
 
 	api.HandleFunc("api/homekit", apiHandler)
+	api.HandleFunc("api/homekit/pairing", apiPairingHandler)
 
 	if cfg.Mod == nil {
 		return
diff --git a/internal/homekit/server.go b/internal/homekit/server.go
index cb114fe..7aa79f2 100644
--- a/internal/homekit/server.go
+++ b/internal/homekit/server.go
@@ -214,7 +214,11 @@ func (s *server) DelPair(conn net.Conn, id string) {
 			continue
 		}
 
-		s.pairings = append(s.pairings[:i], s.pairings[i+1:]...)
+		if strings.Contains(pairing, "permissions=1") {
+			s.pairings = nil
+		} else {
+			s.pairings = append(s.pairings[:i], s.pairings[i+1:]...)
+		}
 		s.UpdateStatus()
 		s.PatchConfig()
 		break

